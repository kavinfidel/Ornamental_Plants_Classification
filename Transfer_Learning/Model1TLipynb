{"cells":[{"cell_type":"markdown","metadata":{"id":"KbPSuAN50qw-"},"source":["#Ornamental Plants Image Classification"]},{"cell_type":"markdown","metadata":{"id":"HPp4Xm_S0z3-"},"source":["## Name: Kavin Fidel J\n","\n","## ID: 210100007"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"89cc8yow1FR6"},"outputs":[],"source":["import tensorflow as tf\n","from tensorflow import keras\n","tf.random.set_seed(41)\n","import numpy as np\n","np.random.seed(41)\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","\n","import glob\n","import PIL\n","from PIL import Image\n","from numpy import save"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":12588,"status":"ok","timestamp":1703782286593,"user":{"displayName":"KAVIN J","userId":"10691475455395478451"},"user_tz":-330},"id":"o309XiNX6_mv","outputId":"13fe6053-212b-46a9-a3f4-041a94028f81"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cvDRJychZdS2"},"outputs":[],"source":["X = []\n","y = []\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9612,"status":"ok","timestamp":1703782296199,"user":{"displayName":"KAVIN J","userId":"10691475455395478451"},"user_tz":-330},"id":"Y0AFUSSqWOcy","outputId":"fca9e550-7ec6-4e4a-b31e-0476caf0b385"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/Ornamental_Plants/Damask Rose/Damask Rose (463).jpeg\n","/content/drive/MyDrive/Ornamental_Plants/Damask Rose/Damask Rose (112).jpeg\n","/content/drive/MyDrive/Ornamental_Plants/Damask Rose/Damask Rose (406).jpeg\n","/content/drive/MyDrive/Ornamental_Plants/Damask Rose/Damask Rose (464).jpeg\n","/content/drive/MyDrive/Ornamental_Plants/Damask Rose/Damask Rose (184).jpeg\n"]}],"source":["# Taking 40%  of the images from each folder\n","dam_rose = glob.glob(\"/content/drive/MyDrive/Deep Learning/Ornamental_Plants/Damask Rose/*.jpeg\")\n","rain_lily = glob.glob(\"/content/drive/MyDrive/Deep Learning/Ornamental_Plants/Rain Lily/*.jpeg\")\n","echeveria = glob.glob(\"/content/drive/MyDrive/Deep Learning/Ornamental_Plants/Echeveria Flower/*.jpg\")\n","mirabilis = glob.glob(\"/content/drive/MyDrive/Deep Learning/Ornamental_Plants/Mirabilis Jalapa/*.jpg\")\n","zinnia = glob.glob(\"/content/drive/MyDrive/Deep Learning/Ornamental_Plants/Zinnia Elegans/*.jpg\")\n","\n","total_drose = len(dam_rose)\n","total_rlily = len(rain_lily)\n","total_eflower = len(echeveria)\n","total_mjalapa = len(mirabilis)\n","total_zelegans = len(zinnia)\n","\n","\n","ImgFiles = dam_rose[:round(0.4*total_drose)] + rain_lily[:round(0.4*total_rlily)] + echeveria[:round(0.4*total_eflower)] + mirabilis[:round(0.4*total_mjalapa)] + zinnia[:round(0.4*total_zelegans)]\n","\n","for items in ImgFiles[:5]:\n","    print(items)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hBQFWgyLZjix"},"outputs":[],"source":["X = []\n","y = []\n","for filename in ImgFiles:\n","  X_i = Image.open(filename)\n","  X_i = X_i.resize((299,299))\n","  X_i = np.array(X_i)/255.0\n","\n","  X.append(X_i)\n","  label = filename.split(\"/\")\n","  y_i = label[-2]\n","  y.append(y_i)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":12,"status":"ok","timestamp":1703782472702,"user":{"displayName":"KAVIN J","userId":"10691475455395478451"},"user_tz":-330},"id":"QWTFa7aaaA1z","outputId":"5732617c-3df9-4af2-918b-20ba70a39f15"},"outputs":[{"output_type":"stream","name":"stdout","text":["{'Damask Rose', 'Mirabilis Jalapa', 'Rain Lily', 'Echeveria Flower', 'Zinnia Elegans'}\n","850\n"]}],"source":["print(set(y))\n","print(len(y))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":653,"status":"ok","timestamp":1703782473348,"user":{"displayName":"KAVIN J","userId":"10691475455395478451"},"user_tz":-330},"id":"XTg3gYZ1EKM-","outputId":"fe4413e9-e4cb-4b05-d314-3962624a2047"},"outputs":[{"output_type":"stream","name":"stdout","text":["{0, 1, 2, 3, 4}\n","['Damask Rose' 'Echeveria Flower' 'Mirabilis Jalapa' 'Rain Lily'\n"," 'Zinnia Elegans']\n"]}],"source":["\n","from sklearn.preprocessing import LabelEncoder\n","\n","lEncoder = LabelEncoder()\n","y = lEncoder.fit_transform(y)\n","\n","print(set(y))\n","print(lEncoder.classes_)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":611,"status":"ok","timestamp":1703782473953,"user":{"displayName":"KAVIN J","userId":"10691475455395478451"},"user_tz":-330},"id":"Vz1rRsYax1Ua","outputId":"29428ea4-a617-405a-c0aa-2cd054b98b14"},"outputs":[{"output_type":"stream","name":"stdout","text":["(850, 299, 299, 3)\n","(850,)\n"]}],"source":["\n","\n","X = np.array(X)\n","\n","y = np.array(y)\n","\n","print(X.shape)\n","print(y.shape)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":555,"status":"ok","timestamp":1703782474506,"user":{"displayName":"KAVIN J","userId":"10691475455395478451"},"user_tz":-330},"id":"fdxuODVxes9s","outputId":"9c6bd85d-7e98-4227-bd8c-86874d9680d8"},"outputs":[{"output_type":"stream","name":"stdout","text":["X_train_shape: (637, 299, 299, 3)\n","X_test_shape: (213, 299, 299, 3)\n"]}],"source":["from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y,\n","                        test_size=0.25,\n","                                        stratify = y,\n","                                                    random_state=42)\n","\n","\n","print(\"X_train_shape: {}\".format(X_train.shape))\n","print(\"X_test_shape: {}\".format(X_test.shape))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YoMnimAWe1Bu"},"outputs":[],"source":["\n","mu = X_train.mean()\n","std = X_train.std()\n","\n","X_train_std = (X_train-mu)/std\n","X_test_std = (X_test-mu)/std"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9865,"status":"ok","timestamp":1703782485699,"user":{"displayName":"KAVIN J","userId":"10691475455395478451"},"user_tz":-330},"id":"42u8gHqie0_F","outputId":"1f71754e-2969-49b0-f3ee-1332522c6b79"},"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/inception_resnet_v2/inception_resnet_v2_weights_tf_dim_ordering_tf_kernels_notop.h5\n","219055592/219055592 [==============================] - 1s 0us/step\n"]}],"source":["base_model = keras.applications.InceptionResNetV2(\n","                include_top=False,\n","                weights=\"imagenet\"\n",")\n","\n","# Freeze the weights - will not be updated during backpropagation\n","for layer in base_model.layers:\n","  layer.trainable = False\n","\n","# Adding classifier\n","global_pool = keras.layers.GlobalAveragePooling2D()(base_model.output)\n","\n","x = keras.layers.BatchNormalization()(global_pool)\n","x = keras.layers.Dropout(0.25)(x)\n","\n","output_ = keras.layers.Dense(units=5, activation='softmax')(x)\n","\n","model1_TL = keras.models.Model(inputs=[base_model.input], outputs=[output_])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d8fqz4yKe08B","outputId":"f39bc2d0-4f4f-41a1-c89f-0e8616c0f2f1","executionInfo":{"status":"ok","timestamp":1703782591599,"user_tz":-330,"elapsed":105903,"user":{"displayName":"KAVIN J","userId":"10691475455395478451"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","36/36 [==============================] - 40s 558ms/step - loss: 0.5682 - accuracy: 0.7941 - val_loss: 0.5726 - val_accuracy: 0.8594\n","Epoch 2/10\n","36/36 [==============================] - 10s 270ms/step - loss: 0.0707 - accuracy: 0.9825 - val_loss: 0.2378 - val_accuracy: 1.0000\n","Epoch 3/10\n","36/36 [==============================] - 7s 182ms/step - loss: 0.0444 - accuracy: 0.9878 - val_loss: 0.1435 - val_accuracy: 1.0000\n","Epoch 4/10\n","36/36 [==============================] - 7s 185ms/step - loss: 0.0275 - accuracy: 0.9948 - val_loss: 0.0821 - val_accuracy: 1.0000\n","Epoch 5/10\n","36/36 [==============================] - 7s 185ms/step - loss: 0.0162 - accuracy: 0.9965 - val_loss: 0.0426 - val_accuracy: 1.0000\n","Epoch 6/10\n","36/36 [==============================] - 7s 186ms/step - loss: 0.0150 - accuracy: 0.9983 - val_loss: 0.0249 - val_accuracy: 1.0000\n","Epoch 7/10\n","36/36 [==============================] - 7s 190ms/step - loss: 0.0102 - accuracy: 1.0000 - val_loss: 0.0143 - val_accuracy: 1.0000\n","Epoch 8/10\n","36/36 [==============================] - 7s 186ms/step - loss: 0.0160 - accuracy: 0.9965 - val_loss: 0.0095 - val_accuracy: 1.0000\n","Epoch 9/10\n","36/36 [==============================] - 7s 192ms/step - loss: 0.0049 - accuracy: 1.0000 - val_loss: 0.0071 - val_accuracy: 1.0000\n","Epoch 10/10\n","36/36 [==============================] - 7s 187ms/step - loss: 0.0055 - accuracy: 0.9983 - val_loss: 0.0057 - val_accuracy: 1.0000\n"]}],"source":["model1_TL.compile(loss='sparse_categorical_crossentropy',\n","                 optimizer='adam',\n","                 metrics=['accuracy'])\n","\n","callbacks1_TL = [\n","             keras.callbacks.ModelCheckpoint(\"bestTL1.h5\",\n","                                             monitor='val_accuracy',\n","                                             save_weights_only=True,\n","                                             save_best_only=True)]\n","\n","history1_TL = model1_TL.fit(x = X_train_std, y = y_train, epochs=10,\n","                          validation_split=0.1, batch_size=16, callbacks=callbacks1_TL)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WeLDzzb6e052","colab":{"base_uri":"https://localhost:8080/","height":449},"executionInfo":{"status":"ok","timestamp":1703782593431,"user_tz":-330,"elapsed":1836,"user":{"displayName":"KAVIN J","userId":"10691475455395478451"}},"outputId":"5d26fae6-0500-418c-fe47-ab662b935efb"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["keys = ['accuracy', 'val_accuracy']\n","progress = {k:v for k,v in history1_TL.history.items() if k in keys}\n","\n","import pandas as pd\n","pd.DataFrame(progress).plot()\n","\n","plt.xlabel(\"epochs\")\n","plt.ylabel(\"accuracy\")\n","\n","plt.grid(True)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WmPz1cD5fHIm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1703782618080,"user_tz":-330,"elapsed":24657,"user":{"displayName":"KAVIN J","userId":"10691475455395478451"}},"outputId":"c66d142c-3e21-46bb-fa46-2823b13acfad"},"outputs":[{"output_type":"stream","name":"stdout","text":["7/7 [==============================] - 16s 1s/step\n","[4 4 2 3 3 0 4 1 1 3 1 1 0 4 4 4 0 0 2 2 1 0 2 0 4 1 4 1 0 4 0 2 0 4 0 2 2\n"," 4 0 0 1 2 2 4 2 1 1 3 2 4 4 3 2 4 3 1 1 0 2 0 2 2 4 0 2 2 0 2 1 0 3 3 4 3\n"," 2 2 1 0 4 4 0 2 0 0 2 4 1 0 4 1 2 4 2 3 4 2 0 4 0 3 3 1 1 4 3 1 2 1 4 1 1\n"," 0 1 1 2 0 2 1 1 3 4 1 2 0 4 2 0 0 2 2 0 1 0 2 4 0 3 0 0 1 4 4 0 1 4 3 2 4\n"," 0 3 1 1 1 1 2 0 0 1 3 4 3 1 4 2 1 4 0 4 2 1 0 1 0 2 1 2 1 0 2 2 0 0 0 0 3\n"," 1 3 2 0 4 1 4 2 0 1 2 2 1 1 1 2 2 0 3 0 2 1 1 4 3 2 1 2]\n"]}],"source":["y_proba = model1_TL.predict(X_test_std)\n","y_predict = np.argmax(y_proba, axis=-1)\n","print(y_predict)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BwLx_p7RfHGd","colab":{"base_uri":"https://localhost:8080/","height":659},"executionInfo":{"status":"ok","timestamp":1703782618081,"user_tz":-330,"elapsed":14,"user":{"displayName":"KAVIN J","userId":"10691475455395478451"}},"outputId":"48b655e9-5be2-40c1-8c49-f04004d3aad6"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 600x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["{0, 1, 2, 3, 4}\n","['Damask Rose' 'Echeveria Flower' 'Mirabilis Jalapa' 'Rain Lily'\n"," 'Zinnia Elegans']\n"]}],"source":["\n","from sklearn.metrics import confusion_matrix\n","\n","cm = confusion_matrix(y_true = y_test, y_pred = y_predict)\n","\n","fig, ax = plt.subplots(figsize=(6, 6))\n","ax.matshow(cm, alpha=0.5)\n","\n","for i in range(cm.shape[0]):\n","    for j in range(cm.shape[1]):\n","        ax.text(x=j, y=i, s=cm[i, j], va='center', ha='center')\n","\n","ax.title.set_text('CNN\\n')\n","plt.xlabel('Predicted Label')\n","plt.ylabel('Actual label')\n","\n","plt.tight_layout()\n","plt.show()\n","\n","print(set(y))\n","print(lEncoder.classes_)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nmUCDBDTfHC6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1703782618082,"user_tz":-330,"elapsed":12,"user":{"displayName":"KAVIN J","userId":"10691475455395478451"}},"outputId":"d948a047-e43e-45a3-ceee-9e2606c84640"},"outputs":[{"output_type":"stream","name":"stdout","text":["Precision:  1.0\n","Recall:  1.0\n","F1-score:  1.0\n"]}],"source":["\n","from sklearn.metrics import precision_score, recall_score, f1_score\n","\n","pScore = precision_score(y_true= y_test, y_pred = y_predict, average = 'weighted')\n","print(\"Precision: \", pScore)\n","\n","rScore = recall_score(y_true= y_test, y_pred = y_predict, average = 'weighted')\n","print(\"Recall: \", rScore)\n","\n","fScore = f1_score(y_true= y_test, y_pred = y_predict, average = 'weighted')\n","print(\"F1-score: \", fScore)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"F0RZpQDSfHBG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1703782622951,"user_tz":-330,"elapsed":4879,"user":{"displayName":"KAVIN J","userId":"10691475455395478451"}},"outputId":"29582291-1d09-4f04-c8c0-254cbea59b28"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py:3103: UserWarning: You are saving your model as an HDF5 file via `model.save()`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')`.\n","  saving_api.save_model(\n"]}],"source":["model1_TL.save(\"/content/drive/MyDrive/Deep Learning/Models/Model1_TL.h5\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qHDj-mIEfZFl"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nUAfXco-f9He"},"outputs":[],"source":["# Saving the Training and the testing data\n","save(\"/content/drive/MyDrive/Deep Learning/Models/X_train1_std.npy\",X_train_std)\n","save(\"/content/drive/MyDrive/Deep Learning/Models/X_test1_std.npy\",X_test_std)\n","# Saving the y labels\n","save(\"/content/drive/MyDrive/Deep Learning/Models/y_train1.npy\",y_train)\n","save(\"/content/drive/MyDrive/Deep Learning/Models/y_test1.npy\",y_test)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0VNpLPEP4pdU"},"outputs":[],"source":[]}],"metadata":{"accelerator":"GPU","colab":{"provenance":[],"gpuType":"T4","mount_file_id":"1ASKd9zSHwT8x20PT3_xOHP_qGictYD6S","authorship_tag":"ABX9TyN8imkIo7oSAp3bwsAPsger"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}